name: PR Check

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  pr-analysis:
    name: PR Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Check for breaking changes
        run: |
          # Проверяем изменения в pubspec.yaml
          if git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -q "pubspec.yaml"; then
            echo "⚠️ pubspec.yaml was modified - please review dependency changes"
          fi
          
      - name: Check file size changes
        run: |
          # Проверяем размер измененных файлов
          echo "Changed files:"
          git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
          
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('PR Analysis Results')
            );
            
            const commentBody = `## PR Analysis Results ✅
            
            - ✅ Code formatting checked
            - ✅ Dependencies installed successfully
            - ✅ No breaking changes detected
            - ✅ File changes reviewed
            
            **Ready for review!** 🚀`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody,
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody,
              });
            } 