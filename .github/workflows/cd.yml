name: CD

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  deploy-android:
    name: Deploy Android
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build release APK
        run: flutter build apk --release
        
      - name: Build app bundle
        run: flutter build appbundle --release
        
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
          
      - name: Upload App Bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle
          path: build/app/outputs/bundle/release/app-release.aab
          
  deploy-ios:
    name: Deploy iOS
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build iOS release
        run: flutter build ios --release --no-codesign
        
      - name: Upload iOS build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-release
          path: build/ios/
          
  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [deploy-android, deploy-ios]
    if: always()
    
    steps:
      - name: Notify on success
        if: needs.deploy-android.result == 'success' && needs.deploy-ios.result == 'success'
        run: |
          echo "✅ Deployment successful!"
          echo "Android APK and App Bundle built successfully"
          echo "iOS build completed successfully"
          
      - name: Notify on failure
        if: needs.deploy-android.result == 'failure' || needs.deploy-ios.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          echo "Check the logs for more details"
          exit 1 